name: Test and Deploy

on:
  pull_request:
    branches:
      - 'main'
      - 'master'
      - 'staging'
  push:
    branches:
      - 'main'
      - 'staging'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - uses: amancevice/setup-code-climate@v0
      name: CodeClimate Install
      with:
        cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev

    - name: Build App
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.TEST_MASTER_KEY }}
      run: |
        bin/rails db:setup
        yarn install

    - name: CodeClimate Pre-build Notification
      run: cc-test-reporter before-build

    - name: Run Tests
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.TEST_MASTER_KEY }}
      run: |
        bundle exec rspec

    - name: Publish code coverage
      run: cc-test-reporter after-build

  deploy_staging:
    concurrency:
      group: staging_deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    needs: [test]
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Push to dokku staging
        uses: dokku/github-action@master
        with:
          git_push_flags: '--force'
          git_remote_url: 'ssh://dokku@free-dom.staging.chris.nsict.org/free-dom'
          ssh_private_key: ${{ secrets.DOKKU_PRIVATE_KEY }}

  deploy_production:
    concurrency:
      group: production_deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test]
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Push to dokku production
        uses: dokku/github-action@master
        with:
          git_push_flags: '--force'
          git_remote_url: 'ssh://dokku@free-dom.nsict.org/free-dom'
          ssh_private_key: ${{ secrets.DOKKU_PROD_PRIVATE_KEY }}

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Good news! "${{ github.event.head_commit.message }}" has been deployed to production.'
