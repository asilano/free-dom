td.other-players
  table class=['player', ('curr_turn' if player.game.current_turn_player == player)]
    tr
      th= player.name
      td: span.lighter Updating: #{player.settings.update_interval}s
    tr
      th Deck:
      td= player.cards.deck.count
    tr
      th Hand:
      td= player.cards.hand.count
    tr
      th Play:
      td
        - if (!player.cards.in_play.empty?)
          table.play
            - player.cards.in_play.in_groups_of(5) do |chunk|
              tr= render partial: 'card', collection: chunk.compact
    - if (!player.cards.enduring.empty?)
      tr
        th Durations:
        td
          table.play
            - player.cards.enduring.in_groups_of(5) do |chunk|
              tr= render partial: 'card', collection: chunk.compact
    tr
      th Discard:
      - if !player.cards.in_discard.empty?
        td= player.cards.in_discard[0].readable_name + " and #{player.cards.in_discard.count - 1} others"
      - else
        td None
    - if !player.cards.revealed.empty? || !controls[:revealed].select {|c| c[:player_id] == player.id}.empty?
      tr
        th Revealed:
        td
          table.revealed
            tr= render partial: 'card', collection: player.cards.revealed
            = render partial: 'control', collection: controls[:revealed].select {|c| c[:player_id] == player.id}
    - if !player.cards.of_type("Seaside::PirateShip").empty?
      tr
        th Pirate Coins:
        td= player.state.pirate_coins
    = raw set_aside_area(player)
    - if player.score.andand != 0
      tr.scoreRow
        th Score:
        td= player.score
    - if !controls[:other_players].select {|c| c[:player_id].to_i == player.id}.empty?
      tr
        td[colspan="2"]
          table
            - controls[:other_players].select {|c| c[:player_id].to_i == player.id}.each do |control|
              - control_form(control)
              tr
                - case control[:type]
                  - when :buttons
                    td= control[:label]
                    - control[:options].each do |opt|
                      td
                        - key = opt.keys.detect{|k| k != :text}
                        = button_tag opt[:text], type: 'submit',
                                                  name: key,
                                                  value: opt[key],
                                                  form: "form_#{control.object_id}",
                                                  disable_with: opt[:text]
