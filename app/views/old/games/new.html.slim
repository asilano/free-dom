.form
  - tweaking = false
  -   if @game.random_select == 'tweak'
  -     @game.random_select = "0"
  -     tweaking = true
  -   end
  = form_for @game do |f|
    - if @game.errors.any?
      #errorExplanation
        h1 There were some problems with your Game
        p Sorry, but we couldn't create your Game. Please fix the following problems and try again.
        ul
          - @game.errors.full_messages.each do |msg|
            li= msg
    fieldset
      legend
        = tweaking ? 'Adjust kingdom cards' : 'New Game'
      .field
        = f.label :name
        br
        = f.text_field :name
      .field
        = f.label :max_players, "Maximum number of players"
        br
        = f.select(:max_players, [2,3,4,5,6])
      .field
        = f.label :random_select, (tweaking ? "Generate another random set of Kingdom Cards" : "Select Kingdom Cards randomly?")
        = f.check_box :random_select
      #card_selects style=((@game.random_select == 1) ? "display: none;" : "")
        table
          - (1..10).each do |ix|
            tr class="row#{(ix % 2 == 0) ? 'Even' : 'Odd'}"
              td.pileLabel= f.label "pile_#{ix}", "Kingdom card #{ix}: "
              td
                .field
                  = f.grouped_collection_select("pile_#{ix}",
                                                Card.expansions,
                                                :kingdom_cards,
                                                :name,
                                                :name,
                                                :readable_name_with_cost,
                                                {})
              td.cardText
                div id="card_text_#{ix}"

      #random_options style=((@game.random_select == 1) ? "" : "display: none;"))
        = f.label :specify_distr, "Specify set distibution?"
        = f.check_box :specify_distr
        #set_distr style=((@game.specify_distr == 1) ? "" : "display: none;")
          p.indented-left.underlined
            | Set distribution:
          table
            - Card.expansions.each do |set|
              tr
                td
                  .field
                    = f.label "num_#{set.name.underscore}_cards", "Number of #{set.name.titleize} cards: "
                td
                  .field
                    = f.select "num_#{set.name.underscore}_cards", (0..[10, set.kingdom_cards.count].min).map { |n| "%2d" % n }, {}, class: 'num_set_cards'
        #set_presence style=((@game.specify_distr == 0) ? "" : "display: none;")
          p.indented-left.underlined
            | Sets to use:
          table
            - Card.expansions.map do |set| set.name.titleize }.each do |set|
              tr
                td
                  .field
                    = f.label "#{set.parameterize('_')}_present", "Include #{set}? "
                td
                  .field
                    = f.check_box "#{set.parameterize('_')}_present"
      #plat_colony
        |  Include Platinum and Colony?
        br
        .field
          = f.radio_button :plat_colony, "rules", :id => "game_plat_col_rules"
          = f.label "plat_col_rules", "At random, in proportion to number of Prosperity cards present (as in rules)"
          br
          = f.radio_button :plat_colony, "yes", :id => "game_plat_col_yes"
          = f.label "plat_col_yes", "Yes"
          br
          = f.radio_button :plat_colony, "no", :id => "game_plat_col_no"
          = f.label "plat_col_no", "No"
          br
      div= f.submit 'Create'
= link_to 'Back', games_path
- content_for :js_in_head do
  |  var choices = new Array(); function onLoadFunc() { for (i = 1; i <= 10 ; i++) { value = $('#game_pile_' + i).val(); choices[i] = value; $('#card_text_' + i).text(card_dict[value]); } }
:javascript
  $('#game_random_select').change(function() {
    if (this.checked) {
      $('#card_selects').slideUp(function() {
        $('#random_options').slideDown();
      });
    }
    else {
      $('#random_options').slideUp(function() {
        $('#card_selects').slideDown();
      });
    }
  });
  $('#game_specify_distr').change(function() {
    if (this.checked) {
      $('#set_presence').slideUp(function() {
        $('#set_distr').slideDown();
      });
    }
    else {
      $('#set_distr').slideUp(function() {
        $('#set_presence').slideDown();
      });
    }
  });
  $('[id^=game_pile_]').on('change keyup', function() {
    var index = this.id.match(/([0-9]+)/)[1];
    var target = $('#card_text_' + index);
    var value = this.value;
    if (value != choices[index]) {
      choices[index] = value;
      target.fadeOut(200, function() {
        target.text(card_dict[value]);
        target.fadeIn(200);
      });
    }
  });
