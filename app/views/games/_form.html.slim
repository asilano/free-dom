= form_with model: @game, local: true, id: 'new_game' do |f|
  - if @game.errors.present?
    .grid-padding-x.alert
      - @game.errors.full_messages.each do |err|
        .cell = err
  .panel
    .field data-controller="random-name"
      = f.text_field :name,
                     help_text: "A name can help make a game memorable, but isn't required",
                     id: "game_name",
                     data: { random_name_target: "nameEntry" }
      p.help-text
        | Want inspiration for a game name? Here's a suggestion
        span.js< you can click
        | :
        span.random-name data-action="click->random-name#useName" data-random-name-target="randomName" =<> random_game_name
        = link_to random_name_path,
                  class: "random-regenerate js",
                  remote: true,
                  data: { action: "ajax:success->random-name#updateRandomName" } do
          i.fa-solid.fa-sync{ title='Regenerate' }

    .field
      = f.text_field :discord_webhook, help_text: 'Paste a webhook URL for a Discord channel here to receive game alerts'
  = f.fields :journals do |j|
    = j.hidden_field :type
    = j.hidden_field :user_id
    = j.hidden_field :fiber_id
    = j.hidden_field :order
    - card_params = j.object.params["card_list"]
    .panel
      h3 Kingdom cards
      #card_selects
        - 10.times do |ix|
          .card-select-row
            .pile-label= label_tag("cards_#{ix}", "Kingdom card #{ix + 1}: ")
            .pile-select= select_tag("#{j.object_name}[params][card_list][]",
                                    option_groups_from_collection_for_select(GameEngine::Card.expansions,
                                                                            :kingdom_cards,
                                                                            :readable_name,
                                                                            :name,
                                                                            :readable_name,
                                                                            card_params[ix]),
                                    id: "cards_#{ix}")
    .panel
      h3 Card-shaped things
      #card_shaped_selects(data-controller="repeatable-field"
                           data-repeatable-field-next-ix-value=(card_params.length - 10))
        = f.button "Add card-shaped thing", name: "add-fields", class: "button", type: "submit", data: { action: "click->repeatable-field#add" }
        - all_card_shapeds = GameEngine::Card.randomised_card_shaped_things.map(&:card_classes).flatten.shuffle
        - (card_params.length - 10).times do |ix|
          = render "card_shaped_fields", ix: ix, object_name: j.object_name, value: card_params[ix + 10]
  #actions.actions
    = f.submit class: 'button'
    = link_to 'Back', games_path, class: "button secondary space-left"
