= form_with model: @game, local: true, id: 'new_game' do |f|
  - if @game.errors.present?
    .grid-padding-x.alert
      - @game.errors.full_messages.each do |err|
        .cell = err
  .panel
    .field
      = f.text_field :name, help_text: 'A name can help make a game memorable, but isn\'t required', id: 'game_name'
      p.help-text
        | Want inspiration for a game name? Here's a suggestion
        span.js< you can click
        | :
        span.random-name =<> random_game_name
        = link_to random_name_path, class: 'random-regenerate', remote: true do
          i.fas.fa-sync{ title='Regenerate' }

    .field
      = f.text_field :discord_webhook, help_text: 'Paste a webhook URL for a Discord channel here to receive game alerts'
  = f.fields :journals do |j|
    = j.hidden_field :type
    = j.hidden_field :user_id
    = j.hidden_field :fiber_id
    = j.hidden_field :order
    - card_params = j.object.params["card_list"]
    .panel
      h3 Kingdom cards
      #card_selects
        - 10.times do |ix|
          .card-select-row
            .pile-label= label_tag("cards_#{ix}", "Kingdom card #{ix + 1}: ")
            .pile-select= select_tag("#{j.object_name}[params][card_list][]",
                                    option_groups_from_collection_for_select(GameEngine::Card.expansions,
                                                                            :kingdom_cards,
                                                                            :readable_name,
                                                                            :name,
                                                                            :readable_name,
                                                                            card_params[ix]),
                                    id: "cards_#{ix}")
    .panel
      h3 Cardlike objects
      #cardlike_selects data-controller="new-game-cardlikes"
        = f.button "Add cardlike object", name: "add-cardlike", class: "button", type: "submit", formaction: new_games_path, formmethod: :post, data: { action: "click->new-game-cardlikes#add" }
        - all_cardlikes = GameEngine::Card.randomised_cardlikes.map(&:card_classes).flatten.shuffle
        - (card_params.length - 10).times do |ix|
          .card-select-row
            .pile-label= label_tag("cards_#{ix + 10}", "Cardlike object #{ix + 1}: ")
            .pile-select= select_tag("#{j.object_name}[params][card_list][]",
                                    option_groups_from_collection_for_select(GameEngine::Card.randomised_cardlikes,
                                                                             :card_classes,
                                                                             :readable_name,
                                                                             :name,
                                                                             :readable_name,
                                                                             card_params[ix + 10]),
                                    id: "cards_#{ix + 10}")
            = f.button "X", name: "delete-cardlike", value: ix + 10, class: "button alert delete-cardlike", type: "submit", formaction: new_games_path, formmethod: :post

  .actions
    = f.submit class: 'button'
    = link_to 'Back', games_path, class: "button secondary space-left"
