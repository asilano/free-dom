<div id="game_state" style="">
  <div id="last_changed">
    Game state last changed at: <span id="last_change_value"><%= h @last_mod.httpdate -%></span>
  </div>
  <div id="last_refreshed">
    Last checked for changes at: <span id="last_refresh_value"><%= h Time.new.httpdate -%></span>
  </div>
  <div id="update_freq" class="lighter">
    <% if @player %>
      Updating every <span id="update_freq_value"><%= @player.settings.update_interval %></span>
      <span id="update_freq_form" style="display: none;">
        <%= form_tag({:action => :update_player_settings, :id => @game}, :remote => true) do %>
          <%= text_field_tag "settings[update_interval]", @player.settings.update_interval, :size => 4 %>
          <%= submit_tag "Set" -%>
        <% end %>
      </span>
      seconds. <span id="change_freq"><%= link_to_function "Change.", "enable_freq_form()" %></span>
               <span id="cancel_freq" style="display: none;"><%= link_to_function "Cancel.", "disable_freq_form()" %></span>
      <script>
        function enable_freq_form()
        {
          $('#update_freq').removeClass("lighter");
          $('#update_freq_value').hide();
          $('#update_freq_form').show();
          $('#change_freq').hide();
          $('#cancel_freq').show();
        }
        function disable_freq_form()
        {
          $('#update_freq').addClass("lighter");
          $('#update_freq_value').show();
          $('#update_freq_form').hide();
          $('#change_freq').show();
          $('#cancel_freq').hide();
        }
      </script>
    <% else %>
      <% freq = @user ? @user.settings.update_interval : 60 %>
      Updating every <%= freq %> seconds.
    <% end %>
  </div>
  <div id="status">
    <div id="ended" style="display: none;"><%= game.state == 'ended' %></div>
    <div id="locked" style="display: none;">false</div>
    <p>
      Game state:
      <% if game.state == 'waiting' %>
        Waiting for players
      <% elsif game.state == 'running' %>
        In progress
      <% elsif game.state == 'ended' %>
        Ended
      <% else %>
        <%= h game.state %>
      <% end %>
    </p>
    <% if not game.active_ply_actions.empty? -%>
    <table id="waitingForTable">
      <tr>
        <td>
          Waiting for:
        </td>
        <td>
          <ul>
            <% game.active_ply_actions.select{|act| act.text && !act.text.empty?}.each do |act| %>
            <li>
              <%= act.player.name + " to " + act.text %>
            </li>
            <% end %>
          </ul>
        </td>
      </tr>
    </table>
    <% end -%>
  </div>
  <div id="players">
    <% if player %>
    <div id="player_private">
      <%= render :partial => 'player_private', :object => player,
      :locals => {:controls => controls} %>
      <!--     <%= button_to "Leave Game", :action => 'clear_player', :id => game %> -->
    </div><hr/><% end %>
    <%= raw game_facts(game) %>
    <div id="player_public">
      <table class="other_players" cellspacing="5">
        <% other_players = game.players.reject {|p| p == player} -%>
        <% if player && player.seat
            other_players = other_players.sort_by {|p| (p.seat - player.seat) % game.players.length}
           end %>
        <% other_players.in_groups_of(2) do |chunk| %>
          <tr class="other_players">
            <%= render :partial => 'player',
                       :collection => chunk.compact,
                       :locals => {:controls => controls} %>
          </tr>
        <% end -%>
      </table>
    </div>
  </div>
  <div id="piles">
    <h3>Buy Piles</h3>
    <table>
      <tr>
        <th>
          Card Type
        </th>
        <th>
          Cost
        </th>
        <th>
          Remaining
        </th>
        <th><!-- pile state--></th>
      </tr>
      <% if controls.include? :piles -%>
      <tr>
        <td>
        </td>
        <td>
        </td>
        <td>
        </td>
        <td></td>
        <% controls[:piles].each do |control| -%>
          <% control_form(control) %>
          <td>
            <% if control[:nil_action] -%>
              <% case control[:type]
                 when :button -%>
                  <%= submit_tag(control[:nil_action],
                        :name => "nil_action",
                        :form => "form_#{control.object_id}",
                        :disable_with => control[:nil_action]) %>
              <% end -%>
            <% end -%>
          </td>
        <% end -%>
      </tr>
      <% end -%>
      <%= render :partial => 'pile', :collection => game.piles, :locals => {:controls => controls, :num_players => game.players.length} %>
    </table>
  </div>
  <div id="join_button">
    <% if !player && @user &&
          (game.users.include?(@user) ||
           (game.state == 'waiting' &&
            game.players.length < game.max_players)) %>
      <%= button_to "Join Game", join_game_path(game) %>
    <% end %>
  </div>
  <%= content_for :control_forms %>
    <%
  # Present a start button to the first-joined player,
  # so long as there are more than 2 and the game is waiting
  if (@game.players.length >= 2 &&
      @player && @player == @game.players[0] &&
      @game.state == 'waiting') %>
    <div id="start_button">
      <%= form_tag({:action => :start_game }, :remote => true, :id => 'start_form') do %>
        <%= submit_tag "Start Game", :id => "start_game_btn" %>
      <% end %>

      <%= javascript_tag do %>
        $('#start_form').on('ajax:beforeSend', function(){ $('#gameStartSpinner').show();
                                                  $(this).attr('disabled', true).val('Please wait...'); })
                            .on('ajax:complete', function(){ $('#gameStartSpinner').hide(); $('#start_button').remove(); })
                            .on('ajax:error', function(){ alert('Sorry, something went wrong. Please refresh and try again'); });
      <% end %>
    </div>
  <% end %>
</div>
<div id="history">
  <ul>
    <% game.histories.each do |history| %>
    <% classes = history.css_class %>
    <% if player && history.css_class =~ /\bplayer#{@player.seat}\b/ %>
    <% classes += " self" %>
    <% end %>
    <li class="<%= classes -%>">
      <%= format_history(history, @player) -%>
    </li>
    <% end %>
  </ul>
</div>
<div id="pend_actions" class="debug <%= 'hidden' unless ((@user && @user.name == 'Chowlett') || request.host == '127.0.0.1') %>" style="margin-left: 65%">
  <% if game.root_action(true) -%>
  <ul>
    <%= render(:partial => "pend_action", :object => game.root_action) %>
  </ul>
  <% end -%>
</div>
<% if game.state == "ended" %>
  <div id="resultOverlay" class="overlay">
  </div>

  <div id="result">
    <p class="centred header">
      Game Over - Results
    </p>
    <% ply_ordered = game.players.sort_by {|p| p.score}.reverse %>
    <ul id="resultList">
      <li class="resultEntry winner">
        <span class="name"><%= h(ply_ordered[0].name) -%></span>
        - Winner with <%= h(ply_ordered[0].score) -%> points!
        <%= link_to("(show deck)", "#", {:class => "showHideDeck showDeck"}) -%>
        <%= link_to("(hide deck)", "#", {:class => "showHideDeck hideDeck"}) -%>
        <p class="deckList" style="display: none;">
          <%= raw ply_ordered[0].cards_for_decklist %>
        </p>
      </li>
      <% ply_ordered.each_with_index do |ply, ix| %>
      <% if ix != 0 %>
      <li class="resultEntry">
        <span class="name"><%= h(ply.name) -%></span>
        -<%= %w<first second third fourth fifth sixth>[ix] + " with " + h(ply.score) -%> points
        <%= link_to("(show deck)", "#", {:class => "showHideDeck showDeck"}) -%>
        <%= link_to("(hide deck)", "#", {:class => "showHideDeck hideDeck"}) -%>
        <p class="deckList" style="display: none;">
          <%= raw ply_ordered[ix].cards_for_decklist %>
        </p>
      </li>
      <% end %>
      <% end %>
    </ul>
    <p class="centred gapAbove">
      <%= link_to "Back to Index", games_path -%>
    </p>
  </div>

  <%= javascript_tag do %>
    $('.resultEntry').on('click', '.showDeck', function()
    {
      $(this).hide();
      $(this).siblings('.hideDeck').show();
      $(this).siblings('.deckList').slideDown();
    }).on('click', '.hideDeck', function()
    {
      $(this).hide();
      $(this).siblings('.showDeck').show();
      $(this).siblings('.deckList').slideUp();
    });
  <% end %>
<% end %>


<%= image_tag("start_game_spinner.gif", :id => "gameStartSpinner", :style => "display: none;") -%>
<%= image_tag("spinner.gif", :id => "spinner", :style => "display: none;") -%>

<% content_for :js_in_head do %>
  // Scroll to bottom of history & chat, and enable controls, every update
  function onLoadFunc()
  {
    $('#history').scrollTop($('#history')[0].scrollHeight);

    // Scroll to bottom of chat
    $('#chatbox').scrollTop($('#chatbox')[0].scrollHeight);

    // Enable all buttons
    $('input[type=button], input[type=submit]').removeAttr('disabled');

    $('.ajaxSpinSmall').on('ajax:beforeSend', function(){$('#spinner').show();})
                       .on('ajax:complete', function(){$('#spinner').hide();});
  }
  
  // Enable the game refresh on first load only
  $(function()
  {
    <% freq = @player ? @player.settings.update_interval : @user ? @user.settings.update_interval : 60 %>
    var inProgress = false;
    setInterval(function()
    {
      if (!inProgress &&
          $('#ended').html().indexOf('false') != -1 &&
          $('#locked').html().indexOf('false') != -1)
      {
        $.ajax({
          url: '<%= url_for 'check_change'%>',
          beforeSend: function(){$('#spinner').show(); inProgress = true},
          complete: function(){$('#spinner').hide(); inProgress = false},
          data: {since: $('#last_refresh_value').html()}

          })
      }
    }, <%= freq * 1000 -%>);
  });
<% end %>