.cell
  .grid-container.fluid
    .grid-x
      .cell#game-title
        - game_title = "Game #{@game.id}"
        - game_title << " â€” #{@game.name}" if @game.name.present?
        h2= game_title
- unless @game.users.include? current_user
  .cell.border-under
    .grid-container.fluid.grid-x
      .cell
        p You are not currently in this game
        = form_with model: @game.journals.build do |f|
          = f.hidden_field :game_id
          = f.hidden_field :type, value: GameEngine::AddPlayerJournal
          = f.submit 'Join game'

.cell.border-under
  .grid-container.fluid
    - if @game.users.include? current_user
      .grid-x.grid-margin-x
        .cell.player.border-under#current-player
          h2= current_user.name
          / Player-button controls
          - @game.question.controls_for(current_user, @game.game_state).select { |ctrl| ctrl.scope == :player }.each do |ctrl|
            = form_with model: @game.journals.build do |f|
              = f.hidden_field :game_id
              = f.hidden_field :type, value: @game.question.journal_type
              - ctrl.values.each do |val|
                = f.button val[0], value: val[1], name: "journal[params][#{ctrl.key}]", class: 'button', data: { disable_with: val[0] }

    .grid-x.grid-margin-x
      - @game.game_state.other_players(exclude_user: current_user).each do |player|
        .cell.auto.player
          h3= player.user.name

.cell
  .grid-container.fluid
    .grid-x.grid-margin-x
      - @game.game_state.piles.each do |pile|
        .cell.pile
          .card-name= pile.card_class.readable_name

  p
    strong> Players in game:
    = @game.users.map(&:name).join(', ')

  p
    strong> Current question:
    = @game.question.player.name + ': ' + @game.question.text(@game.game_state)

  p
    strong> Journal log:
    ul
      - @game.game_state.logs.each do |log|
        li= log

  = link_to 'Back', games_path
