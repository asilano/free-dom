- content_for :layout_stylesheet
  = stylesheet_link_tag 'game_board'
- if @player
  - content_for :game_prefs
    #playerPrefsHover
      span Adjust Game Settings
      #playerPrefs= render partial: "player_settings"
      javascript:
        $('#playerPrefsHover').on('click', 'input[type=checkbox]', function() {
          $(this).closest('form').submit();
        }).on('change keyup', 'select', function() {
          $(this).closest('form').submit();
        });
h2= @game.name
#game_board
  #game_state
    = render partial: 'game', object: @game, locals: {player: @player, controls: @controls}
  aside
    #journals
      = render partial: 'journals'
    /#pend_actions.debug class=('hidden' unless ((@user && @user.name == 'Chowlett') || request.host == '127.0.0.1'))
    /  - if @game.questions.present?
    /    ul
        /render(partial: 'pend_action', object: @game.root_action)
    /#journals
    /  = render partial: 'journals', object: @game.journals
    #chat
      #chatbox= render partial: 'chat_line', collection: @game.chats
      = form_tag action: :speak do
        div
          = text_field_tag("name", nil, placeholder: "Name?") if !@user
          = text_field_tag("say", nil, placeholder: "What do you want to say?", autocomplete: 'off')
          = submit_tag "Say", class: 'input-hack'
  - content_for :js_in_head do
    javascript:
      // Best-in-place handling
      $(function()
      {
        $(".best_in_place").best_in_place();
        $('#journals').on("ajax:success", '.change_journal', function ()
        {
          $.getScript('#{play_game_path(@game)}');
        })
        .on("click", '.journal .insert', function ()
        {
          var newLi = $('<li class="journal">').insertAfter($(this).parent()); //'
          var bipField = $("#{escape_javascript best_in_place(Journal.new, :event, class: 'change_journal', method: 'post', html_attrs: {style: 'width: 100%', autocomplete: 'off'})}");
          bipField.attr('data-bip-other-fields', $.param({game_id: #{@game.id}, journal: {modified: true, order: $(this).data('order')}}));
          bipField.insertAfter(newLi);
          bipField.best_in_place().click();
        });
      });

      // Scroll to bottom of history & chat, and enable controls, every update
      function onLoadFunc() {
        $('#journals').scrollTop($('#journals')[0].scrollHeight);

        // Scroll to bottom of chat
        $('#chatbox').scrollTop($('#chatbox')[0].scrollHeight);

        // Enable all buttons
        $('input[type=button], input[type=submit]').removeAttr('disabled');  //'
        $('.ajaxSpinSmall').on('ajax:beforeSend', function(){
          $('#spinner').show();
        }).on('ajax:complete', function(){
          $('#spinner').hide();
        });
      }

      // Enable the game refresh on first load only
      $(function() {
        var inProgress = false;
        setInterval(function() {
          if (!inProgress && $('#ended').html().indexOf('false') != -1 && $('#locked').html().indexOf('false') != -1) {
            $.ajax({ url: '#{url_for 'check_change'}',
                      beforeSend: function(){
                        $('#spinner').show();
                        inProgress = true;
                      },
                      complete: function(){
                        $('#spinner').hide(); inProgress = false;
                      },
                      data: {since: $('#last_refresh_value').html()}
                    })
          }
        },
        #{(@player ? @player.settings.update_interval : @user ? @user.settings.update_interval : 60) * 1000});
      });
javascript:
  $('#chat form').on('submit', function(e) {
    $.post($(this).attr('action'),
            $(this).serialize(), function(){}, "script");
    $(this).find('[name=say]').val("");
    e.stopPropagation();
    e.preventDefault();
  });
