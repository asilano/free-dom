- pile_controls = @game.controls_for(current_user).select { |ctrl| ctrl.scope == :supply }
= render partial: 'control_skeleton', collection: pile_controls

.cell.small-12.medium-12.large-8.grid.grid-x
  - @game.game_state.piles.each_with_index.each_slice((@game.game_state.piles.size / 2.0).round).with_index do |half, half_ix|
    .cell.small-12.medium-6.large-6
      - if pile_controls.any? { _1.cardless_buttons.present? }
        .pile{class=('hidden' if half_ix > 0)}
          .pile-cost.hidden
          .card.null-card
            .card-name
            - pile_controls.each do |ctrl|
              = render partial: 'controls/cardless_button', collection: ctrl.cardless_buttons, as: :button, locals: { control: ctrl }
      - half.each do |pile, ix|
        .pile
          .pile-cost
            span.cost-text= pile.cards.first&.cost || pile.card_class.raw_cost
          .card{class=(pile.cards.first || pile.card_class).types}
            .card-name{data-tooltip data-allow-html="true" title=pile.text}= pile.card_class.readable_name
            - pile.tokens.each do |token|
              .card-token= token.to_s.humanize
            - pile_controls.each do |ctrl|
              .card-ctrl
                - if ctrl.filter(pile.cards.first)
                  = render partial: ctrl, as: :control, locals: { value: ix, card: pile.cards.first }
          .pile-count{class=('empty' if pile.cards.empty?)}= "#{pile.cards.size} of #{pile.card_class.starting_size(@game.users.size)}"
        - if @game.game_state.artifacts.values.any? { |art| art.comes_from == pile.card_class && art.owner.nil? }
          .card-grid
            - @game.game_state.artifacts.values.select { |art| art.comes_from == pile.card_class && art.owner.nil? }.each do |art|
              .cell.card.card_shaped.artifact
                .card-name{data-tooltip data-allow-html="true" title=art.text}= art.readable_name

  - if @game.game_state.card_shapeds.present?
    - @game.game_state.card_shapeds.each_with_index.each_slice((@game.game_state.card_shapeds.size / 2.0).round).with_index do |half, half_ix|
      .cell.small-12.medium-6.large-6
        - half.each do |card_shaped, ix|
          .pile
            .pile-cost
              span.cost-text= card_shaped.cost
            .card.card_shaped{class=card_shaped.types}
              .card-name{data-tooltip data-allow-html="true" title=card_shaped.text}= card_shaped.readable_name
              - card_shaped.owners.sort_by(&:seat).each do |owner|
                .card_shaped-owner class="player#{owner.seat}"= card_shaped.text_for(owner)
              - pile_controls.each do |ctrl|
                .card-ctrl
                  - if ctrl.filter(card_shaped)
                    = render partial: ctrl, as: :control, locals: { value: ix + @game.game_state.piles.size, card: card_shaped }
