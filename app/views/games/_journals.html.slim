ul
  - @game.journals.each do |journal|
    -if !journal.hidden || journal.modified
      li.journal class=classes_for_journal(journal, @player)
        - if journal.modified
          span.bold>[] (Edited)
        - if journal.player == @player && journal.order > @game.last_blocked_journal
          = best_in_place journal, :event, class: 'change_journal', other_fields: {game_id: @game.id}, html_attrs: {style: 'width: 100%', autocomplete: 'off'}
        - else
          span.immutable= journal.event
        -if journal.errors.any?
          ul.journal_errors.error
            - journal.errors.full_messages.each do |msg|
              li= msg
        - if journal.histories.any?
          ul.journal_histories
            - journal.histories.each do |history|
              - classes = history.css_class
              - if @player && history.css_class =~ /\bplayer#{@player.seat}\b/
                - classes += ' self'
              li class=classes = format_history(history, @player)
        - if journal.order >= @game.last_blocked_journal
          span.insert data-order=journal.order+1