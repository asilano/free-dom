.card-grid {
  @include xy-grid;
  @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, small) / 2, 'margin');
      @include xy-gutters(map-get($grid-margin-gutters, small) / 2, $negative:true);

  @include breakpoint(medium) {
      @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, medium) / 2, 'margin');
      @include xy-gutters(map-get($grid-margin-gutters, medium) / 2, $negative:true);
  }
  @include breakpoint(large up) {
      @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, medium) / 2, 'margin');
      @include xy-gutters(map-get($grid-margin-gutters, medium) / 2, $negative:true);
  }
}

// The following section is order-dependent
.card-name, .card-token {
  .action.card & {background-color: $action-cream}
  .reaction.card & {background-color: $reaction-blue}
  .duration.card & {background-color: $duration-orange}
  .treasure.card & {background-color: $treasure-yellow}
  .victory.card & {background-color: $victory-green}
  .curse.card & {background-color: $curse-purple}
}
.attack.card .card-name {
  color: $attack-red;
  font-weight: bold;
}

.scores .player-deck {
  .card { padding: 2px 4px; }
  .action {background-color: $action-cream}
  .reaction {background-color: $reaction-blue}
  .duration {background-color: $duration-orange}
  .treasure {background-color: $treasure-yellow}
  .victory {background-color: $victory-green}
  .curse {background-color: $curse-purple}
  .attack {
    color: $attack-red;
  }
}

.card-token {
  font-size: 0.8em;

  &:before {
    content: 'â—‰'
  }
}

.cell.card {
  width: auto;
  min-width: 120px;

  &.back-wrapper {
    display: flex;
    flex-direction: column;
  }
}

.card {
  background-color: $body-background;
  border: 3px solid $black;
  border-radius: 3px;
  margin: 5px 0;
  position: relative;
  text-align: center;

  // Styling overrides for a fake button-holding card etc.
  &.null-card {
    border-color: $light-gray;
    background-color: $light-gray;
    max-width: none;
    width: auto;
  }
  &.no-card {
    border-style: dashed;
  }

  .card-name {
    height: 24px;
  }

  .card-ctrl {
    min-height: 48px;
    margin-left: 16px;
    margin-right: 16px;
  }

  .card-name + .card-ctrl {
    margin-top: 8px;
  }
}

.reorder-cards .card:not(.null-card) {
  box-shadow: 5px 5px 5px $medium-gray;
  transform: perspective(10cm) rotateY(-30deg);
  transition: transform 0.5s;

  &:not(:first-child) {
    margin-left: -16px;
  }

  &:hover {
    transform: perspective(10cm) rotateY(-20deg);
  }
}

.subset-indicator {
  background: linear-gradient(
    to right,
    $light-gray,
    $white
  );
  border-color: 3px solid $white;
  border-radius: 3px;
  margin: 5px 0 5px 5px;
  padding-left: 8px;
}

.pile {
  display: flex;
  align-items: center;

  .card {
    width: 120px;
    min-height: 64px;

    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .card-name {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .pile-cost {
    width: 70px;
    height: 0px;
    text-align: center;
    border: 20px solid $medium-gray;
    border-left-color: transparent;
    position: relative;

    .cost-text {
      position: absolute;
      top: -15px;
      left: 8px;
    }
  }

  .pile-count {
    width: 70px;
    height: 40px;
    line-height: 40px;
    background-color: $medium-gray;
    padding: 0 5px;
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;

    &.empty {
      background-color: $empty-pile-red;
    }
  }
}

.card-back {
  border: 10px solid $card-back-blue;
  border-left-width: 15px;
  border-right-width: 15px;
  border-radius: 3px;
  background-color: $action-cream;
  min-height: 40px;
  width: 160px;
  text-align: center;

  .back-wrapper & {
    flex: 1 0 auto;
  }
}

.card-count {
  font-size: 0.75em;
}

.this-player .card-back {
  font-size: 1.5em;
  min-height: 55px;

  .detail {
    font-size: 0.8rem;
  }
}