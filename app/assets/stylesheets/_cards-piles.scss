.card-grid, .floating-control {
  @include xy-grid;
  @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, small) / 2, 'margin');
  @include xy-gutters(map-get($grid-margin-gutters, small) / 2, $negative:true);

  position: relative;

  @include breakpoint(medium) {
    @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, medium) / 2, 'margin');
    @include xy-gutters(map-get($grid-margin-gutters, medium) / 2, $negative:true);
  }

  @include breakpoint(large up) {
    @include xy-grid-layout(1, '.cell', true, map-get($grid-margin-gutters, medium) / 2, 'margin');
    @include xy-gutters(map-get($grid-margin-gutters, medium) / 2, $negative:true);
  }
}

.card-token {
  font-size: 0.8em;

  &::before {
    content: 'â—‰';
  }
}

.card {
  position: relative;
  border: 3px solid $black;
  border-radius: 3px;
  margin: 5px 0;
  background-color: $body-background;
  text-align: center;

  // Styling overrides for a fake button-holding card etc.
  &.null-card {
    width: auto;
    max-width: none;
    border-color: $light-gray;
    background-color: $light-gray;
  }

  &.no-card {
    border-style: dashed;
  }

  .card-name {
    width: 100%;
    height: 24px;
  }

  .card-ctrl {
    min-height: 48px;
    margin-right: 16px;
    margin-left: 16px;
  }

  .card-name + .card-ctrl {
    margin-top: 8px;
  }
}

.pile {
  display: flex;
  align-items: center;

  .card {
    display: flex;
    width: 120px;
    min-height: 64px;

    flex-direction: column;
    justify-content: center;
  }

  .card-name {
    display: flex;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
  }

  .pile-cost {
    position: relative;
    width: 70px;
    height: 40px;
    background: $medium-gray;
    text-align: center;

    .cost-text {
      position: absolute;
      top: calc(50% - 15px);
      left: calc(50% - 15px);
    }
  }

  .pile-count {
    width: 70px;
    height: 40px;
    padding: 0 5px;
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;
    background-color: $medium-gray;
    line-height: 40px;

    &.empty {
      background-color: $empty-pile-red;
    }
  }
}

.scores .player-deck .card { padding: 2px 4px; }

.cell.card {
  display: flex;
  width: auto;
  min-width: 120px;

  flex-flow: row wrap;
  align-items: center;
  justify-content: center;

  &.back-wrapper {
    display: flex;
    flex-direction: column;
  }

  // Stacks of cards
  &.stacked {
    position: absolute;
    top: 0;
    left: 0;

    &:first-child {
      position: relative;
      z-index: 10;
    }

    .card-grid:hover & {
      position: relative;
    }
  }

  .card-grid:hover &.stack-info {
    display: none;
  }
}

// The following section is order-dependent
.action.card    { background-color: $action-cream; }
.reaction.card  { background-color: $reaction-blue; }
.duration.card  { background-color: $duration-orange; }
.treasure.card  { background-color: $treasure-yellow; }
.victory.card   { background-color: $victory-green; }
.curse.card     { background-color: $curse-purple; }

.artifact.cardlike  { background-color: $artifact-brown; }
.project.cardlike   { background-color: $project-pink; }

.attack.card .card-name {
  color: $attack-red;
  font-weight: bold;
}

.reorder-cards .card:not(.null-card) {
  box-shadow: 5px 5px 5px $medium-gray;
  transform: perspective(10cm) rotateY(-30deg);
  transition: transform 0.5s;

  &:not(:first-child) {
    margin-left: -16px;
  }

  &:hover {
    transform: perspective(10cm) rotateY(-20deg);
  }
}

.card-back {
  min-width: 150px;
  min-height: 40px;
  padding: 3px 5px;
  border: 7px solid $action-cream;
  border-radius: 3px;
  border-right-width: 10px;
  border-left-width: 10px;
  background-color: $card-back-blue;
  text-align: center;

  .back-wrapper & {
    flex: 1 0 auto;
  }
}

.card-count {
  font-size: 0.75em;
}

.this-player .card-back {
  min-height: 55px;
  font-size: 1.5em;

  .detail {
    font-size: 0.8rem;
  }
}
